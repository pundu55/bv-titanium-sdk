Ext.data.JsonP.BV_api({"tagname":"class","name":"BV.api","extends":"BV","mixins":[],"alternateClassNames":[],"aliases":{},"singleton":true,"requires":[],"uses":[],"enum":null,"override":null,"inheritable":null,"inheritdoc":null,"meta":{},"private":null,"id":"class-BV.api","members":{"cfg":[],"property":[],"method":[{"name":"config","tagname":"method","owner":"BV.api","meta":{"chainable":true},"id":"method-config"},{"name":"get","tagname":"method","owner":"BV.api","meta":{"chainable":true},"id":"method-get"},{"name":"submit","tagname":"method","owner":"BV.api","meta":{"chainable":true},"id":"method-submit"},{"name":"warn","tagname":"method","owner":"BV.api","meta":{},"id":"method-warn"}],"event":[],"css_var":[],"css_mixin":[]},"linenr":36,"files":[{"filename":"main.js","href":"main.html#BV-api"}],"html_meta":{},"statics":{"cfg":[],"property":[],"method":[],"event":[],"css_var":[],"css_mixin":[]},"component":false,"superclasses":["BV"],"subclasses":["BV.api.get","BV.api.submit"],"mixedInto":[],"parentMixins":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'><a href='#!/api/BV' rel='BV' class='docClass'>BV</a><div class='subclass '><strong>BV.api</strong></div></div><h4>Subclasses</h4><div class='dependency'><a href='#!/api/BV.api.get' rel='BV.api.get' class='docClass'>BV.api.get</a></div><div class='dependency'><a href='#!/api/BV.api.submit' rel='BV.api.submit' class='docClass'>BV.api.submit</a></div><h4>Files</h4><div class='dependency'><a href='source/main.html#BV-api' target='_blank'>main.js</a></div></pre><div class='doc-contents'><p>External Bazaarvoice Javascript API Library object namespace</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-config' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='BV.api'>BV.api</span><br/><a href='source/api.html#BV-api-method-config' target='_blank' class='view-source'>view source</a></div><a href='#!/api/BV.api-method-config' class='name expandable'>config</a>( <span class='pre'>configObj</span> ) : Object<strong class='chainable signature' >chainable</strong></div><div class='description'><div class='short'>A configuration function that mixes in config for each call. ...</div><div class='long'><p>A configuration function that mixes in config for each call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>configObj</span> : Object<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>api object for chaining</p>\n</div></li></ul></div></div></div><div id='method-get' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='BV.api'>BV.api</span><br/><a href='source/api.html#BV-api-method-get' target='_blank' class='view-source'>view source</a></div><a href='#!/api/BV.api-method-get' class='name expandable'>get</a>( <span class='pre'>displayContentType, idList</span> ) : Object<strong class='chainable signature' >chainable</strong></div><div class='description'><div class='short'>This function kicks things off. ...</div><div class='long'><p>This function kicks things off. It uses the jQuery pattern of calling a prototype\nto actually kick off a new instance. The <code>new</code> keyword creates a new instance scope so\nall the data called on it after a <code>get</code> call and it's aliases won't affect other queries.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>displayContentType</span> : String<div class='sub-desc'><p>the content type that is being displayed</p>\n</div></li><li><span class='pre'>idList</span> : String | Array<div class='sub-desc'><p>the list of ids to filter by for display content type</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>display object for chaining</p>\n</div></li></ul></div></div></div><div id='method-submit' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='BV.api'>BV.api</span><br/><a href='source/submit.html#BV-api-method-submit' target='_blank' class='view-source'>view source</a></div><a href='#!/api/BV.api-method-submit' class='name expandable'>submit</a>( <span class='pre'>submitContentType, submitPrefix</span> ) : Object<strong class='chainable signature' >chainable</strong></div><div class='description'><div class='short'>This function kicks things off. ...</div><div class='long'><p>This function kicks things off. It uses the jQuery pattern of calling a prototype to\nactually kick off a new instance. The <code>new</code> keyword creates a new instance scope so\nall the data called on it after a <code>submit</code> call and it's alieases won't affect other queries.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>submitContentType</span> : String<div class='sub-desc'><p>the content type that is being submitted</p>\n</div></li><li><span class='pre'>submitPrefix</span> : String<div class='sub-desc'><p>the prefix used in the url before submit content type Default: submit</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>submit object for chaining</p>\n</div></li></ul></div></div></div><div id='method-warn' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='BV.api'>BV.api</span><br/><a href='source/api.html#BV-api-method-warn' target='_blank' class='view-source'>view source</a></div><a href='#!/api/BV.api-method-warn' class='name expandable'>warn</a>( <span class='pre'>msg, data</span> ) : Object</div><div class='description'><div class='short'>A consistent way to do warnings, only runs if the console is available. ...</div><div class='long'><p>A consistent way to do warnings, only runs if the console is available.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>msg</span> : String<div class='sub-desc'>\n</div></li><li><span class='pre'>data</span> : Object<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>api object for chaining</p>\n</div></li></ul></div></div></div></div></div></div></div>"});